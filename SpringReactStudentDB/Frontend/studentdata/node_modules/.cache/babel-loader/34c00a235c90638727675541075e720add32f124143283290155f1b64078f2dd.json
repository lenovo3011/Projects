{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full Stack Java\\\\Projects\\\\Frontend\\\\studentdata\\\\src\\\\Update.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom';\nimport './Update.css';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport { StdbyID } from './API';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Update() {\n  _s();\n  const [data, setData] = useState({\n    'id': '',\n    'email': '',\n    'name': '',\n    'phone': ''\n  });\n  const [email, setEmail] = useState();\n  const [ID, setID] = useState();\n  const [name, setName] = useState();\n  const [phone, setPhone] = useState();\n  let id = useLocation().pathname.split('/').at(2);\n  const ApiD = async () => {\n    try {\n      const d = await StdbyID(id);\n      if (d.status === 200) {\n        setEmail(d.data.email);\n        setID(d.data.id);\n        setName(d.data.name);\n        setPhone(d.data.phone);\n        console.log(d.data);\n      } else {\n        console.log(d.status);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    ApiD();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"first\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Update Student Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: ID,\n              className: \"textBox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: event => setName(event.target.value),\n              value: name,\n              placeholder: \"Name\",\n              className: \"textBox\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: event => setPhone(event.target.value),\n              value: phone,\n              placeholder: \"Phone number\",\n              type: \"number\",\n              className: \"textBox\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              onChange: event => setEmail(event.target.value),\n              value: email,\n              placeholder: \"Email\",\n              type: \"email\",\n              className: \"textBox\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button\",\n            children: \"Update Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Update, \"gwpVEZFFBQANzm0WJLBgnh6Y9/A=\", false, function () {\n  return [useLocation];\n});\n_c = Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["useLocation","Form","Row","Col","Button","useEffect","useState","StdbyID","jsxDEV","_jsxDEV","Fragment","_Fragment","Update","_s","data","setData","email","setEmail","ID","setID","name","setName","phone","setPhone","id","pathname","split","at","ApiD","d","status","console","log","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Control","value","onChange","event","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["D:/Full Stack Java/Projects/Frontend/studentdata/src/Update.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Update.css' ;\r\nimport { Form , Row , Col , Button } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport { StdbyID } from './API';\r\n\r\n\r\n\r\nexport default function Update() {\r\n    const [data , setData] = useState({\r\n        'id' : '' , \r\n        'email' : '' ,\r\n        'name' : '' , \r\n        'phone' : ''\r\n    })\r\n    const [email , setEmail] = useState() ;\r\n    const [ID , setID] = useState() ;\r\n    const [name , setName] = useState() ;\r\n    const [phone , setPhone] = useState() ;    \r\n\r\n    let id = useLocation().pathname.split('/').at(2)\r\n    const ApiD = async () => {\r\n    \r\n        try {\r\n            const d = await StdbyID(id) ;\r\n            if (d.status === 200) {\r\n                setEmail(d.data.email) ;\r\n                setID(d.data.id) ;\r\n                setName(d.data.name) ;\r\n                setPhone(d.data.phone) ;\r\n                console.log(d.data)\r\n            }\r\n            else {console.log(d.status)}\r\n \r\n      }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n        \r\n    }\r\n     useEffect (()=> {\r\n        ApiD () ;\r\n    },\r\n[])\r\n\r\n\r\n  return (\r\n    <>  \r\n        <div className='first'>\r\n            <h3> Update Student Info</h3>\r\n            <Form className='form'>\r\n                \r\n                <Row> \r\n                    <Col>\r\n                          <Form.Control value={ID} className='textBox'/>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Control onChange={(event)=>setName(event.target.value)}  value={name} placeholder=\"Name\"  className='textBox' required/>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row> \r\n                    <Col>\r\n                        <Form.Control onChange={(event)=>setPhone(event.target.value)} value={phone} placeholder=\"Phone number\" type='number'  className='textBox' required/>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Control onChange={(event)=>setEmail(event.target.value)} value = {email} placeholder=\"Email\" type='email' className='textBox' required />\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row>\r\n                    <Button className='button'>\r\n                               Update Data\r\n                     </Button>\r\n                </Row>\r\n\r\n\r\n            </Form>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}