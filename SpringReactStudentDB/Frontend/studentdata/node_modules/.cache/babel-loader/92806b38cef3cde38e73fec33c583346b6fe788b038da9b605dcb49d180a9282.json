{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full Stack Java\\\\Projects\\\\Frontend\\\\studentdata\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport MyCard from './MyCard';\nimport load from './Animation - 175171Loading7760308.json'; // Assuming this is your Lottie animation file\nimport { useEffect, useState } from 'react';\nimport { GetData, DeleteStd } from './API'; // Ensure these are correctly imported from your API file\nimport Lottie from 'lottie-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apiData, setApiData] = useState([]); // Initialize with an empty array for mapping\n  const [loading, setLoading] = useState(true); // Consistent casing for state variables\n\n  // Function to fetch data from the API\n  const fetchData = async () => {\n    setLoading(true); // Start loading before the API call\n    try {\n      const response = await GetData();\n      if (response.status === 200) {\n        // A slight delay to show the loading animation, optional for production\n        setTimeout(() => {\n          setApiData(response.data);\n          setLoading(false); // Stop loading after data is set\n        }, 1500); // Reduced delay for better user experience\n      } else {\n        // Handle non-200 responses more gracefully\n        console.error(`Error: Received status code ${response.status}`);\n        alert('Failed to fetch data. Please try again.');\n        setLoading(false); // Stop loading even on error\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('An error occurred while fetching data. Please check your network connection.');\n      setLoading(false); // Stop loading on error\n    }\n  };\n\n  // Function to delete a student record\n  const handleDelete = async id => {\n    try {\n      const response = await DeleteStd(id);\n      if (response.status === 200) {\n        alert('Student deleted successfully!');\n        fetchData(); // Refresh data after successful deletion\n      } else if (response.status === 404) {\n        // Assuming 404 for \"not found\"\n        alert('Student with this ID not found.');\n      } else {\n        alert(`Failed to delete student: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error deleting student:', error);\n      alert('An error occurred while deleting the student.');\n    }\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\" \", loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Lottie, {\n        animationData: load,\n        loop: true,\n        style: {\n          height: '300px',\n          width: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: apiData.length > 0 ? /*#__PURE__*/_jsxDEV(MyCard, {\n        data: apiData,\n        dlt: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available to display.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this) // Message when no data is returned\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WcJ6Fd+OyuTDm8B8hdJPZcFWVog=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MyCard","load","useEffect","useState","GetData","DeleteStd","Lottie","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","apiData","setApiData","loading","setLoading","fetchData","response","status","setTimeout","data","console","error","alert","handleDelete","id","className","children","animationData","loop","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","length","dlt","_c","$RefreshReg$"],"sources":["D:/Full Stack Java/Projects/Frontend/studentdata/src/App.js"],"sourcesContent":["import './App.css';\nimport MyCard from './MyCard';\nimport load from './Animation - 175171Loading7760308.json'; // Assuming this is your Lottie animation file\nimport { useEffect, useState } from 'react';\nimport { GetData, DeleteStd } from './API'; // Ensure these are correctly imported from your API file\nimport Lottie from 'lottie-react';\n\nfunction App() {\n  const [apiData, setApiData] = useState([]); // Initialize with an empty array for mapping\n  const [loading, setLoading] = useState(true); // Consistent casing for state variables\n\n  // Function to fetch data from the API\n  const fetchData = async () => {\n    setLoading(true); // Start loading before the API call\n    try {\n      const response = await GetData();\n      if (response.status === 200) {\n        // A slight delay to show the loading animation, optional for production\n        setTimeout(() => {\n          setApiData(response.data);\n          setLoading(false); // Stop loading after data is set\n        }, 1500); // Reduced delay for better user experience\n      } else {\n        // Handle non-200 responses more gracefully\n        console.error(`Error: Received status code ${response.status}`);\n        alert('Failed to fetch data. Please try again.');\n        setLoading(false); // Stop loading even on error\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('An error occurred while fetching data. Please check your network connection.');\n      setLoading(false); // Stop loading on error\n    }\n  };\n\n  // Function to delete a student record\n  const handleDelete = async (id) => {\n    try {\n      const response = await DeleteStd(id);\n      if (response.status === 200) {\n        alert('Student deleted successfully!');\n        fetchData(); // Refresh data after successful deletion\n      } else if (response.status === 404) {\n        // Assuming 404 for \"not found\"\n        alert('Student with this ID not found.');\n      } else {\n        alert(`Failed to delete student: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error deleting student:', error);\n      alert('An error occurred while deleting the student.');\n    }\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  return (\n    <div className=\"App\"> {/* A wrapping div for better structure */}\n      {loading ? (\n        <div className=\"loading-container\"> {/* Container for centering/styling Lottie */}\n          <Lottie animationData={load} loop={true} style={{ height: '300px', width: '300px' }} />\n          <p>Loading data...</p> {/* Optional loading message */}\n        </div>\n      ) : (\n        <>\n          {apiData.length > 0 ? (\n            <MyCard data={apiData} dlt={handleDelete} />\n          ) : (\n            <p>No data available to display.</p> // Message when no data is returned\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}